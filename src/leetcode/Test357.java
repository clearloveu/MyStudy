package leetcode;

/**
 * @author zg
 * @create 2020-04-24 12:56
 *
 * 计算各个位数不同的数字个数[中等]
 *
 * 给定一个非负整数 n，计算各位数字都不同的数字 x 的个数，其中 0 ≤ x < 10n 。
 * 示例:
 * 输入: 2
 * 输出: 91
 * 解释: 答案应为除去 11,22,33,44,55,66,77,88,99 外，在 [0,100) 区间内的所有数字。
 *
 */
public class Test357 {
//    写下前几个，就能看出规律了。
//    n=1: res=10
//    n=2: res=9*9+10=91  # 两位数第一位只能为1-9，第二位只能为非第一位的数，加上一位数的所有结果
//    n=3: res=9 * 9 * 8+91=739  # 三位数第一位只能为1-9，第二位只能为非第一位的数，第三位只能为非前两位的数，加上两位数的所有结果
//    n=4: res=9 * 9 * 8 * 7+739=5275  # 同上推法

    //n>10以后答案都不变了，因为11位数不可能各个位数都不同，因此 i 遍历1到min(n, 10)即可

    //python
    //    def countNumbersWithUniqueDigits(self, n: int) -> int:
    //        if not n:
    //            return 1
    //        res, muls = 10, 9
    //        for i in range(1, min(n,10)):
    //            muls *= 10 - i
    //            res += muls
    //        return res

}
